This file contains 3 source code files (MainWindow.xaml.cs, MainWindow.xaml, DictionaryEntryObject.cs) and one result file (MyVokList.txt).

The WPF App can produce a vocabulary list .txt file using an offline version of JMdict_e.txt copyright protected sourcefile (Please read www.edrdg.org/ for further information).
License: Creative Commons Attribution - ShareAlike License(V3.0).

*****************MainWindow.xaml***********************************

<Window x:Class="WpfApp1VocabularyList.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1VocabularyList"
        mc:Ignorable="d"
        Title="Student's 'First Own Project' in WIFI WIEN C# Software Developer Course, Vienna, Austria, Europe, 2018. Student: Sylvia Weninger" Height="768" Width="1024">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="33*"/>
            <ColumnDefinition Width="33*"/>
            <ColumnDefinition Width="33*"/>
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" >
            <TextBlock Name="tbkAbout"  Background="LemonChiffon" TextWrapping="Wrap" FontSize="14">
            </TextBlock>
        </ScrollViewer>
        <WrapPanel Orientation="Vertical" Grid.Column="0" Grid.Row="2" >
            <Label Margin="10, 10, 10, 10" FontSize="16">Searched word in Chinese letters:</Label>
            <TextBox Name="tbxSearchInput" FontSize="16" Margin="10, 10, 10, 10"/>
            <Button Name="btnSearch" Content="Search" Margin="10, 10, 10, 10" Click="btnSearch_Click"/>
            <TextBox Margin="10, 10, 10, 10" TextWrapping="Wrap">To enter Chinese characters using a Windows keyboard on an English or German operating system, you need to enable the Microsoft IME input method. Otherwise, insert letters into the following text field using Ctrl C and Ctrl V. </TextBox>
            <TextBox Name="tbxDemoKanji" Width="300" Height="270" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap" AcceptsReturn="True" FontSize="16"></TextBox>
        </WrapPanel>
        <WrapPanel  Orientation="Vertical" Grid.Column="1" Grid.Row="2" >
            <Label Margin="10, 10, 10, 10" FontSize="16">List of results:</Label>
            <ListBox Margin="10, 10, 10, 10" Name="listbox1" FontSize="16" Width="300" Height="400" SelectionChanged="listbox1_SelectionChanged"/>
         </WrapPanel>
        <WrapPanel Orientation="Vertical" Grid.Column="2" Grid.Row="2" >
            <Label Margin="10, 10, 10, 10" FontSize="16">Your personal vocabulary list:</Label>
            <TextBox Margin="10, 10, 10, 10" TextWrapping="Wrap">Your personal vocabulary list is saved as "MyVokList.txt" in the same directory as this program's .exe file</TextBox>
            <ListBox Margin="10, 10, 10, 10" Name="listbox2" FontSize="16" Width="300" Height="400" SelectionChanged="listbox2_SelectionChanged"/>            
        </WrapPanel>
        
        
    </Grid>
</Window>



********************End MainWindow.xaml********************************

********************MainWindow.xaml.cs********************************
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.IO;

namespace WpfApp1VocabularyList
{
    /// <summary>
    /// Interaktionslogik für MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        string gesWort; //Japanese word written in Chinese characers (kanji) that the user wants to be found in the dictionary
        List<DictionaryEntryObject> allEntriesList; //List of vocabulary information for each entry; not all the information of JMdict_e.txt file is included, only a reduced amount of information.
        List<DictionaryEntryObject> resultList; //List of found results for the one keyword that the user was searching
        List<DictionaryEntryObject> allResultsList = new List<DictionaryEntryObject>(); //List of found results from performed searches
        List<DictionaryEntryObject> choiceList = new List<DictionaryEntryObject>(); //List of entry-objects of which the user wants the information in his personal vocabulary list.

        public MainWindow()
        {

            /*
             This program needs the JMdict_e.txt dictionary file.
             Please copy it manually into the same directory, where the .exe file of this program is stored.
             While this program is still under construction, the JMdict_e.txt file is retrieved from the .../bin/Debug/ file.
             
            The dictionary files are made available under a Creative Commons Attribution-ShareAlike Licence (V3.0).
            Creative Commons Licence: creativecommons.org/licenses/by-sa/3.0/legalcode
            
            "This package uses the EDICT and KANJIDIC dictionary files. "+
                "\nThese files are the property of the Electronic Dictionary Research and Development Group, "+
                "\nand are used in conformance with the Group's licence. "+
                "\nSee www.edrdg.org/jmdict/edict.html and www.edrdg.org/edrdg/licence.html";
            
            //The JMdict_e.txt Dictionary File can be downloaded at: www.edrdg.org/jmdict/edict_doc.html
            //The file contains the dictionary entries and XML Tags, among others.
            //Downloadlink: ftp.monash.edu/pub/nihongo/JMdict_e.gz
            //To decompress use for example: www.7-zip.de
            //File JMdict_e.txt (decompressed) needs to be placed into the same directory as the .exe file of this program (/bin/Debug).
            
            */



            InitializeComponent();

            tbkAbout.Text =
             "This computer program assists in making your own Japanese-English vocabulary lists." +
             "\nIn order to make it work, you need to copy the dictionary file into the same directory as the .exe file of this program." +
             "\nDownload link: ftp.monash.edu/pub/nihongo/JMdict_e.gz." +
             "\nTo decompress .gz file into .txt file you could use for example: www.7-zip.de." +
             "\nThis package uses the EDICT and KANJIDIC dictionary files. " +
            "\nThese files are the property of the Electronic Dictionary Research and Development Group " +
            "and are used in conformance with the Group's license. " +
            "\nSee www.edrdg.org/jmdict/edict.html and www.edrdg.org/edrdg/licence.html." +

            "\nThe present Vocabulary List WPF-App is being developed as a home exercise in a computer programming training course. " +
            "The 'C# Software Developer' Course takes place in WIFI WIEN in Vienna, Austria, Europe. " +
            "Instructors: Christopher Benge, Florian Pöhr, Michaela Pum. Student: Sylvia Weninger." +
            "\nThis software is still under construction. " +
            "There is no warranty for the correctness of the results nor for the completeness of the application. " +
            "License: Creative Commons Attribution - ShareAlike License(V3.0). (https:" +
            "//creativecommons.org/licenses/by-sa/3.0/legalcode)";

            //Enter demo-text
            tbxDemoKanji.Text = "\n黒い" + "\n白い" + "\n赤い" + "\n黄" + "\n緑" + "\n青い" + "\n薄茶";

            //try to load sourcefile

            try
            {
                allEntriesList = DictionaryEntryObject.ProduceEntryObjectList();

            }
            catch (Exception)
            {
                MessageBox.Show("File Load Error: " +
                    "This program needs JMdict_e.txt file in the same directory, as the .exe file of this program. " +
                    "The file is property of the Electronic Dictionary Research and Development Group. " +
                    "The file could not be found. Please download it at ftp.monash.edu/pub/nihongo/JMdict_e.gz. For decompressing you can use www.7-zip.de, for example. " +
                    "Please copy the file into the same directory as the .exe-File of this WPF-App. " +
                    "When the JMdict_e.txt file is in the same directory as the .exe-File of this WPF-App, you are free to create your own personal vocabulary lists. Sorry for the inconvenience!");

                //throw;
            }

        } //END  MainWindow()

        private void btnSearch_Click(object sender, RoutedEventArgs e)
        {
            gesWort = tbxSearchInput.Text;
            FindDictionaryResults();
        }

        /// <summary>
        /// Look for the information on the kanji that the user entered into tbxSearchInput and add objects from allEntriesList to erg
        /// </summary>
        public void FindDictionaryResults()
        {
            //List of all entries that match the current searchword
            resultList = DictionaryEntryObject.FindTranslationAndPronounciation(allEntriesList, gesWort);

            foreach (DictionaryEntryObject s in resultList)
            {
                //listbox1.Items.Add(s.strEnt_seq);
                //listbox1.Items.Add(s.strKeb);
                //listbox1.Items.Add(s.strReb);
                //listbox1.Items.Add(s.strGloss);
                //listbox1.Items.Add(" ");
                //or:
                allResultsList.Add(s);
                listbox1.Items.Add(s.strEnt_seq + " \n" + s.strKeb + " \n" + s.strReb + " \n" + s.strGloss + " \n");

            }
        }



        private void listbox1_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            int s = listbox1.SelectedIndex;
            //TODO stimmt nicht, wenn doppelt Elemente übernommen werden.
            choiceList.Add(allResultsList.ElementAt(s));
            DictionaryEntryObject kuksi = allResultsList.ElementAt(s);
            listbox2.Items.Add(kuksi.strEnt_seq + " \n" + kuksi.strKeb + " \n" + kuksi.strReb + " \n" + kuksi.strGloss + " \n");
            Save();
        }

        private void listbox2_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            int d = listbox2.SelectedIndex;

            if (d != (-1))
            {
                var s = listbox2.Items.GetItemAt(d);
                string u = s.ToString();
                MessageBox.Show(u + "The selected item was deleted.");
                choiceList.RemoveAt(d);
                listbox2.Items.RemoveAt(d);
                Save();
            }
        }

        private void Save()
        {
            FileStream fs = new FileStream("MyVokList.txt", FileMode.Create);
            //overwrites existing file of this name with new one each time it is created
            StreamWriter file = new StreamWriter(fs);
            file.Write(WriteContent());
            file.Close();
            fs.Close();
        }

        private string WriteContent()
        {
            string Filename = "MyVokList.txt";
            StringBuilder s = new StringBuilder();

            //header
            s.AppendLine("This publication has included material from the JMdict (EDICT, etc.) dictionary files in accordance with the licence provisions of the Electronic Dictionaries Research Group.");
            s.AppendLine("See www.csse.monash.edu.au/~jwb/edict.html and www.edrdg.org/ .");

            s.AppendLine("The content of the following vocabulary list may have been altered after retrieving it from JMdict_e.txt. Please verify the correctness of the information at wwwjdic.org/ ! ");
            s.AppendLine("There is no warranty for the correctness of the content of this vocabulary list.");
            s.AppendLine("****************************************************");
            s.AppendLine(Filename);
            s.AppendLine(DateTime.Today.ToShortDateString());
            s.AppendLine("****************************************************");
            s.AppendLine(" ");

            //vocabulary
            s.AppendLine("***Vocabulary List***");


            foreach (var item in choiceList)
            {
                s.AppendLine(item.strEnt_seq);
                s.AppendLine(item.strKeb);
                s.AppendLine(item.strReb);
                s.AppendLine(item.strGloss);
                s.AppendLine("");
            }
            return s.ToString();
        }
    }
}




********************End MainWindow.xaml.cs********************************


********************DictionaryEntryObject.cs********************************
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Xml.Serialization;

namespace WpfApp1VocabularyList
{
    class DictionaryEntryObject
    {
        /*The dictionary files are made available under a Creative Commons Attribution-ShareAlike Licence (V3.0).
         * Creative Commons Licence: creativecommons.org/licenses/by-sa/3.0/legalcode
         * 
         "This package uses the EDICT and KANJIDIC dictionary files. "+
                "\nThese files are the property of the Electronic Dictionary Research and Development Group, "+
                "\nand are used in conformance with the Group's licence. "+
                "\nSee www.edrdg.org/jmdict/edict.html and www.edrdg.org/edrdg/licence.html";
             */

        //The JMdict_e.txt Dictionary File can be downloaded at: www.edrdg.org/jmdict/edict_doc.html
        //The file contains the dictionary entries and XML Tags, among others.
        //Downloadlink: ftp.monash.edu/pub/nihongo/JMdict_e.gz
        //To decompress use for example: www.7-zip.de
        //File JMdict_e.txt (decompressed) needs to be placed into the same directory as the .exe file of this program (/bin/Debug).

        //There are some <keb> contents in JMdict_e_txt, which have more than one entry, eg. "此方".
        //Consequently, there can be more than one result when searching for a specific kanji i.e. <keb> entry.
        //Sometimes, there is more than one entry assigned with the same XML-Tag, 
        //eg one or three contents in one entry that are assigned by <gloss>.

        //For the production of C Sharp Objects that all have the same amount of properties,
        //I summarised contents that are in the same entry and have the same tag
        //into one property, separated the values by semicolons;


        public string strEnt_seq, strKeb, strReb, strGloss;

        /// <summary>
        /// constructor
        /// </summary>
        /// <param name="E">ent_seq</param>
        /// <param name="K">keb</param>
        /// <param name="R">reb</param>
        /// <param name="G">gloss</param>
        public DictionaryEntryObject(string E, string K, string R, string G)
        {
            strEnt_seq = E;
            strKeb = K;
            strReb = R;
            strGloss = G;
        }

        /// <summary>
        /// Reads JMdict_e.txt dictionary file, that needs to be placed into the bin/Debug directory.
        /// Produces a list of objects which each contains selected information of the ent_seq, keb, reb and gloss tags of one entry in JMdict_e.txt
        /// If there are more than one gloss contents in one entry, they get combined into one piece separated by semicolons;
        /// The XML-Tags get removed.
        /// </summary>
        /// <returns>List of Objects, one from each entry in JMdict_e.txt</returns>
        public static List<DictionaryEntryObject> ProduceEntryObjectList()
        {
            string jmdictfile = "JMdict_e.txt"; //Dictionary Sourcefile from  www.edrdg.org/jmdict/edict.html

            List<DictionaryEntryObject> liste1 = new List<DictionaryEntryObject>();

            string strE = "";
            string strK = "";
            string strR = "";
            string strG = "";

            FileStream file = new FileStream(jmdictfile, FileMode.Open, FileAccess.Read);
            StreamReader streamReader = new StreamReader(file);

            string line = "Test";
            while (!streamReader.EndOfStream)
            {
                line = streamReader.ReadLine();
                if (line.Contains("<ent_seq>"))
                {
                    line = line.Replace("<ent_seq>", "");
                    line = line.Replace("</ent_seq>", "");
                    line = line + "; ";

                    strE += line;
                }
                if (line.Contains("<keb>"))
                {
                    line = line.Replace("<keb>", "");
                    line = line.Replace("</keb>", "");
                    line = line + "; ";

                    strK += line;
                }
                if (line.Contains("<reb>"))
                {
                    line = line.Replace("<reb>", "");
                    line = line.Replace("</reb>", "");
                    line = line + "; ";

                    strR += line;
                }
                if (line.Contains("<gloss>"))
                {
                    line = line.Replace("<gloss>", "");
                    line = line.Replace("</gloss>", "");
                    line = line + "; ";

                    strG += line;
                }


                if (line.Contains("</entry>"))
                {
                    //Console.WriteLine("Stringwerte: strE: " + strE +", strK: "+ strK+", strR: " + strR+", strG: " + strG);
                    liste1.Add(new DictionaryEntryObject(strE, strK, strR, strG));
                    strE = "";
                    strK = "";
                    strR = "";
                    strG = "";
                }


            }
            streamReader.Close();
            return liste1;
        }

        /// <summary>
        /// Searches for the translation of a particular keyword
        /// </summary>
        /// <param name="allEntriesObjectsList">Contains the list of entry-objects</param>
        /// <param name="userInputSearchKanji">Word in chinese characters, for which translation is looked for</param>
        /// <returns>List of found objects that contain the targeted chinese character</returns>
        public static List<DictionaryEntryObject> FindTranslationAndPronounciation(List<DictionaryEntryObject> allEntriesObjectsList, string userInputSearchKanji)
        {
            List<DictionaryEntryObject> ergebnis = new List<DictionaryEntryObject>();

            var exprSucheKanji = from a in allEntriesObjectsList
                                 where a.strKeb.Contains(userInputSearchKanji)
                                 select a;

            foreach (var item in exprSucheKanji)
            {
                ergebnis.Add(item);
            }

            return ergebnis;

        }


    }
}




********************End DictionaryEntryObject.cs********************************


********************MyVokList.txt********************************

Result: MyVokList.txt file

This publication has included material from the JMdict (EDICT, etc.) dictionary files in accordance with the licence provisions of the Electronic Dictionaries Research Group.
See www.csse.monash.edu.au/~jwb/edict.html and www.edrdg.org/ .
The content of the following vocabulary list may have been altered after retrieving it from JMdict_e.txt. Please verify the correctness of the information at wwwjdic.org/ ! 
There is no warranty for the correctness of the content of this vocabulary list.
****************************************************
MyVokList.txt
19.02.2018
****************************************************
 
***Vocabulary List***
1474910; 
白い; 
しろい; 
white; 

1287420; 
黒い; 
くろい; 
black; dark; illicit; wicked; underground; 

1383240; 
赤い; 紅い; 朱い; 緋い; 丹い; 赭い; 
あかい; 
red; Red (i.e. communist); 

2574040; 
萌葱; 萌黄; 萠黄; 
もえぎ; もよぎ; 
light yellowish green; color of a freshly sprouted onion; 

2455330; 
橙黄色; 
とうこうしょく; 
orange (colour); 

2818250; 
緑草; 
りょくそう; 
green grass; verdure; 

2399870; 
緑豊か; 
みどりゆたか; 
lushly green; verdant; 

1381390; 
青い; 蒼い; 碧い; 
あおい; 
blue; green; pale; unripe; inexperienced; 

1690520; 
薄茶; 
うすちゃ; 
weak matcha; light brown (color, colour); 

