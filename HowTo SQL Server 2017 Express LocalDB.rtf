{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1031{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil Consolas;}{\f2\fnil\fcharset0 Consolas;}{\f3\fnil\fcharset134 SimSun;}{\f4\fnil\fcharset128 MS Mincho;}{\f5\froman\fcharset0 Times New Roman;}{\f6\froman Times New Roman;}}
{\colortbl ;\red0\green0\blue255;\red0\green0\blue0;\red128\green128\blue128;\red0\green128\blue0;\red43\green145\blue175;\red128\green0\blue0;\red163\green21\blue21;}
{\*\generator Riched20 10.0.16299}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\b\f0\fs32\lang7 Microsoft SQL Server Express Edition\par
\b0\fs22 How to write data from JMdict.txt file into Microsoft SQL Server Express Edition local database.\par
1) Using Microsoft SQL Server Management Studio 2017, I created a new database. The name of the new database is called  JMdict. \par

\pard\sa200\sl240\slmult1 The Computer System automatically created the files 'JMdict.mdf' and 'JMdict_log.ldf' in the directory ../users/(MyUserName).\par
\par
\b\fs28 Automatically generated script\par
\b0\fs16 In Microsoft SQL Server Management Studio:\par
USE [JMdict]\par
GO\par
\par
/****** Object:  Table [dbo].[Table_1]    Script Date: 20.02.2018 11:17:10 ******/\par
SET ANSI_NULLS ON\par
GO\par
\par
SET QUOTED_IDENTIFIER ON\par
GO\par
\par
CREATE TABLE [dbo].[Table_1](\par
\tab [ID] [int] IDENTITY(1,1) NOT NULL,\par
\tab [dbEnt_seq] [nvarchar](50) NOT NULL,\par
\tab [dbKeb] [nvarchar](50) NULL,\par
\tab [dbReb] [nvarchar](50) NOT NULL,\par
\tab [dbGloss] [nvarchar](250) NOT NULL\par
) ON [PRIMARY]\par
GO\par

\pard\fs22\lang1031\par
\b\fs32 2) C# Program to Insert Data\par
\b0\fs22\par
using System.Data.SqlClient;\par
\par

\pard\sa200\sl276\slmult1\lang7 **************MainWindow.xaml.cs****************\lang1031\par

\pard\cf1\f1\fs19 using\cf2  System;\par
\cf1 using\cf2  System.Collections.Generic;\par
\cf1 using\cf2  System.Linq;\par
\cf1 using\cf2  System.Text;\par
\cf1 using\cf2  System.Threading.Tasks;\par
\cf1 using\cf2  System.Windows;\par
\cf1 using\cf2  System.Windows.Controls;\par
\cf1 using\cf2  System.Windows.Data;\par
\cf1 using\cf2  System.Windows.Documents;\par
\cf1 using\cf2  System.Windows.Input;\par
\cf1 using\cf2  System.Windows.Media;\par
\cf1 using\cf2  System.Windows.Media.Imaging;\par
\cf1 using\cf2  System.Windows.Navigation;\par
\cf1 using\cf2  System.Windows.Shapes;\par
\cf1 using\cf2  System.Data.SqlClient;\par
\par
\cf1 namespace\cf2  WpfAppJMdictMSSQLLocalDB\par
\{\par
    \cf3 ///\cf4  \cf3 <summary>\cf2\par
    \cf3 ///\cf4  This Program reads data, writes two rows of data, deletes selected row from Microsoft SQL Server Express Edition Local Database\cf2\par
    \cf3 ///\cf4  \cf3 </summary>\cf2\par
    \cf1 public\cf2  \cf1 partial\cf2  \cf1 class\cf2  \cf5 MainWindow\cf2  : Window\par
    \{\par
        \cf4 //information aboug connection to Microsoft SQL Server localdb\cf2\par
        \cf1 const\cf2  \cf1 string\cf2  myConnectionString = \cf6 @"Data\f2  \f1 Source=(LocalDB)\\MSSQLLocalDB;AttachDbFilename=\f2 " + \par
"\f1 C:\\Users\\\f2 INSERTYOURUSERNAME\f1\\JMdict.mdf; \f2 " + \par
"\f1 Integrated Security=True;Connect Timeout=30"\cf2 ;\par
        SqlConnection myConnection = \cf1 null\cf2 ;\par
        SqlCommand myCommand = \cf1 null\cf2 ;\par
        SqlDataReader mySqlDataReader = \cf1 null\cf2 ;\par
        StringBuilder myStringBuilder = \cf1 new\cf2  StringBuilder();\par
        \cf1 string\cf2  myQueryAllResultString;\par
\par
\par
        \cf1 public\cf2  MainWindow()\par
        \{\par
            InitializeComponent();\par
\par
            \cf4 //1) READ FROM DATABASE\cf2\par
            \cf4 //try opening a new connection\cf2\par
\par
            \cf1 try\cf2\par
            \{\par
                myConnection = \cf1 new\cf2  SqlConnection(myConnectionString);\par
                myConnection.Open();\par
            \}\par
            \cf1 catch\cf2  (Exception myConnectionFailed)\par
            \{\par
                MessageBox.Show(myConnectionFailed.Message);\par
                \cf1 return\cf2 ;\par
            \}\par
\par
            \cf4 //try reading data from database\cf2\par
            \cf1 try\cf2\par
            \{\par
                myCommand = myConnection.CreateCommand();\par
                myCommand.CommandText = \cf7 "SELECT dbo.Table_1.* FROM dbo.Table_1"\cf2 ;\par
                mySqlDataReader = myCommand.ExecuteReader();\par
                myDatabaseReadEachLineWriteToString();\par
                myQueryAllResultString = myStringBuilder.ToString();\par
            \}\par
            \cf1 catch\cf2  (Exception myReadingFailed)\par
            \{\par
                MessageBox.Show(myReadingFailed.Message);\par
                \cf1 return\cf2 ;\par
            \}\par
\par
            \cf4 //write result into Textbox\cf2\par
            tbx1.Text = myQueryAllResultString;\par
            mySqlDataReader.Close();\par
            myConnection.Close();\par
\par
            \cf4 //2) INSERT 2 NEW ROWs INTO DATABASE\cf2\par
            \cf4 //Reference: {{\field{\*\fldinst{HYPERLINK www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/step/2.html }}{\fldrslt{www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/step/2.html\ul0\cf0}}}}\cf2\f1\fs19\par
\par
            \cf4 //Write SQL Statement\cf2\par
            myStringBuilder.Clear();\par
            myStringBuilder.Append(\cf7 "INSERT dbo.Table_1 (dbEnt_seq, dbKeb, dbReb, dbGloss)"\cf2 );\par
            myStringBuilder.Append(\cf7 "VALUES ('test1', 'test2', 'test3', 'test4');"\cf2 );\par
            myStringBuilder.Append(\cf7 "INSERT dbo.Table_1 (dbEnt_seq, dbKeb, dbReb, dbGloss)"\cf2 );\par
            myStringBuilder.Append(\cf7 "VALUES ('2834160', N'\f3\'ca\'aa\'b2\'bc\'cb\'61\f1 ', N'\f4\'82\'b5\'82\'c1\'82\'d5\'82\'e2\'82\'ad\f1 ', 'poultice; cataplasm');"\cf2 );\par
            \cf1 string\cf2  sql = myStringBuilder.ToString();\par
\par
            \cf4 //try opening connection to database\cf2\par
            \cf1 try\cf2\par
            \{\par
                myConnection = \cf1 new\cf2  SqlConnection(myConnectionString);\par
                myConnection.Open();\par
            \}\par
            \cf1 catch\cf2  (Exception myConnectionFailed)\par
            \{\par
                MessageBox.Show(myConnectionFailed.Message);\par
                \cf1 return\cf2 ;\par
            \}\par
\par
            \cf4 //execute sql command\cf2\par
            \cf1 using\cf2  (SqlCommand myInsertCommand = \cf1 new\cf2  SqlCommand(sql, myConnection))\par
            \{\par
\par
                \cf1 int\cf2  rowsAffected = myInsertCommand.ExecuteNonQuery();\par
                tbx1.Text += \cf7 "\\nNumber of rows inserted: "\cf2  + rowsAffected.ToString();\par
            \}\par
\par
            \cf4 //close connection\cf2\par
            myConnection.Close();\par
\par
\par
            \cf4 //3 DELETE ROW FROM DATABASE\cf2\par
\par
            myStringBuilder.Clear();\par
            myStringBuilder.Append(\cf7 "DELETE FROM dbo.Table_1 WHERE dbENT_seq = 'test1';"\cf2 );\par
            sql = myStringBuilder.ToString();\par
            \cf4 //try opening connection to database\cf2\par
            \cf1 try\cf2\par
            \{\par
                myConnection = \cf1 new\cf2  SqlConnection(myConnectionString);\par
                myConnection.Open();\par
            \}\par
            \cf1 catch\cf2  (Exception myConnectionFailed)\par
            \{\par
                MessageBox.Show(myConnectionFailed.Message);\par
                \cf1 return\cf2 ;\par
            \}\par
\par
            \cf4 //execute sql command\cf2\par
            \cf1 using\cf2  (myCommand = \cf1 new\cf2  SqlCommand(sql, myConnection))\par
            \{\par
\par
                \cf1 int\cf2  rowsAffected = myCommand.ExecuteNonQuery();\par
                tbx1.Text += \cf7 "\\nNumber of Rows deleted: "\cf2  + rowsAffected.ToString();\par
            \}\par
\par
            \cf4 //close connection\cf2\par
            myConnection.Close();\par
\par
        \}\par
\par
        \cf1 public\cf2  \cf1 void\cf2  myDatabaseReadEachLineWriteToString()\par
        \{\par
            \cf1 while\cf2  (mySqlDataReader.Read())\par
            \{\par
                \cf4 //mySqlDataReader[]\cf2\par
                myStringBuilder.AppendLine(mySqlDataReader.GetSqlInt32(0).ToString() + \cf7 "; "\cf2 );\par
                myStringBuilder.AppendLine(mySqlDataReader.GetSqlString(1).ToString() + \cf7 "; "\cf2 );\par
                myStringBuilder.AppendLine(mySqlDataReader.GetSqlString(2).ToString() + \cf7 "; "\cf2 );\par
                myStringBuilder.AppendLine(mySqlDataReader.GetSqlString(3).ToString() + \cf7 "; "\cf2 );\par
                myStringBuilder.AppendLine(mySqlDataReader.GetSqlString(4).ToString() + \cf7 "; "\cf2 );\par
            \}\par
        \}\par
    \}\par
\}\par
\cf0\f0\fs22\par

\pard\sa200\sl276\slmult1\lang7 **************End MainWindow.xaml.cs****************\par
\par
\par
\fs32 Untested additional information about the installation of SQL Server 2017 Express-Edition:\par

\pard\keepn\sb100\sa100\b\f5\fs22\lang1031 SQL Server 2017 Express-Edition\par
\fs18 Erstellen Sie mit dieser kostenlosen Datenbank der Einsteigerklasse kleine, datengesteuerte Web- und Mobile-Anwendungen von bis zu 10 GB\par
(...)\par
Eine einfache Datenbank in Anwendungen einbetten\par

\pard\b0\fs16 Erstellen Sie kleine Datenbanken in grundlegenden Desktopanwendungen oder Tools mit {{\field{\*\fldinst{HYPERLINK "https://docs.microsoft.com/sql/database-engine/configure-windows/sql-server-2016-express-localdb"}}{\fldrslt{\ul\cf1\cf1\ul SQL Server Express LocalDB}}}}\f5\fs16  \f6\endash\f5  eine einfache Bereitstellungsoption, die zusammen mit Anwendungen innerhalb des Prozesses ausgef\'fchrt wird.\par

\pard\keepn\sb100\sa100\b\fs18 (...)\par
SQL Server 2017 Express LocalDB\par

\pard\b0\fs16 Betten Sie SQL Server Express mit LocalDB, einer einfachen Version der Express-Edition, in Anwendungen ein. Beim Herunterladen von SQL Server Express 2017 als kostenlose Option verf\'fcgbar. \par
Installationslink: {\b\fs18{\field{\*\fldinst{HYPERLINK https://go.microsoft.com/fwlink/?LinkID=799012 }}{\fldrslt{https://go.microsoft.com/fwlink/?LinkID=799012\ul0\cf0}}}}\b\f5\fs18\par

\pard\sa200\sl276\slmult1 {\b0\f0\fs14\lang7{\field{\*\fldinst{HYPERLINK https://www.microsoft.com/de-ch/sql-server/sql-server-editions-express }}{\fldrslt{https://www.microsoft.com/de-ch/sql-server/sql-server-editions-express\ul0\cf0}}}}\b0\f0\fs14\lang7\par
\par
(Untested information: Download Link for \lang1031 SQL Server 2017 Express LocalDB:)\par
{{\field{\*\fldinst{HYPERLINK https://go.microsoft.com/fwlink/?LinkID=799012 }}{\fldrslt{https://go.microsoft.com/fwlink/?LinkID=799012\ul0\cf0}}}}\f0\fs14\lang7\par
(Untested information: How to install the database management system:)\par
{{\field{\*\fldinst{HYPERLINK https://www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/ }}{\fldrslt{https://www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/\ul0\cf0}}}}\f0\fs14\par
(Untested information: How to write data into the database:)\par
{{\field{\*\fldinst{HYPERLINK https://www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/step/2.html }}{\fldrslt{https://www.microsoft.com/en-us/sql-server/developer-get-started/csharp/win/step/2.html\ul0\cf0}}}}\f0\fs14\par
\fs22\par
}
 